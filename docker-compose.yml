version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: legislators_db
    environment:
      POSTGRES_DB: legislators
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d legislators_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - legislators_network

  api:
    build: .
    container_name: legislators_api
    environment:
      DATABASE_URL: postgresql://postgres:password@db:5432/legislators_db
      WEATHER_API_KEY: ${WEATHER_API_KEY:-your_weather_api_key_here}
      FLASK_ENV: production
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - legislators_network
    restart: unless-stopped

  data_ingestion:
    build: .
    container_name: legislators_data_ingestion
    environment:
      DATABASE_URL: postgresql://postgres:password@db:5432/legislators_db
    depends_on:
      db:
        condition: service_healthy
    command: python ingest_data.py
    networks:
      - legislators_network
    profiles:
      - data-load

volumes:
  postgres_data:
    driver: local

networks:
  legislators_network:
    driver: bridge
